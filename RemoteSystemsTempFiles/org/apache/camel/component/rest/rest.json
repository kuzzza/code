{
 "component": {
    "kind": "component",
    "scheme": "rest",
    "syntax": "rest:method:path:uriTemplate",
    "title": "REST",
    "description": "REST-DSL component.",
    "label": "core,rest",
    "consumerOnly": "true",
    "lenientProperties": "true",
    "javaType": "org.apache.camel.component.rest.RestComponent",
    "groupId": "org.apache.camel",
    "artifactId": "camel-core",
    "version": "2.16.2"
  },
  "componentProperties": {
  },
  "properties": {
    "method": { "kind": "path", "group": "consumer", "required": "true", "type": "string", "javaType": "java.lang.String", "enum": [ "get", "post", "put", "delete", "patch", "head", "trace", "connect", "options" ], "deprecated": "false", "description": "HTTP method to use." },
    "path": { "kind": "path", "group": "consumer", "required": "true", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "The base path" },
    "uriTemplate": { "kind": "path", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "The uri template" },
    "bridgeErrorHandler": { "kind": "parameter", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "boolean", "optionalPrefix": "consumer.", "deprecated": "false", "defaultValue": "false", "description": "Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "componentName": { "kind": "parameter", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "The Camel Rest component to use for the REST transport such as restlet spark-rest. If no component has been explicit configured then Camel will lookup if there is a Camel component that integrates with the Rest DSL or if a org.apache.camel.spi.RestConsumerFactory is registered in the registry. If either one is found then that is being used." },
    "consumes": { "kind": "parameter", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "Media type such as: 'text/xml' or 'application/json' this REST service accepts. By default we accept all kinds of types." },
    "description": { "kind": "parameter", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "Human description to document this REST service" },
    "inType": { "kind": "parameter", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "To declare the incoming POJO binding type as a FQN class name" },
    "outType": { "kind": "parameter", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "To declare the outgoing POJO binding type as a FQN class name" },
    "produces": { "kind": "parameter", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "Media type such as: 'text/xml' or 'application/json' this REST service returns." },
    "routeId": { "kind": "parameter", "group": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "description": "Name of the route this REST services creates" },
    "exceptionHandler": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": "false", "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "string", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "RobustInOnly", "InOut", "InOptionalOut", "OutOnly", "RobustOutOnly", "OutIn", "OutOptionalIn" ], "deprecated": "false", "defaultValue": "InOnly", "description": "Sets the default exchange pattern when creating an exchange." },
    "synchronous": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "defaultValue": "false", "description": "Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported)." }
  }
}

